apply plugin: 'com.android.application'

android {

    compileSdkVersion 28
    buildToolsVersion '28'

    defaultConfig {
        applicationId "com.alixlp.ship"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 4
        versionName "2.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        renderscriptTargetApi 25
        renderscriptSupportModeEnabled true    // Enable RS support
        multiDexEnabled true

    }
    signingConfigs {
        debug {
            storeFile file('/Users/abel.tang/workspace/app/wangxiaoyang.keystore')
            storePassword '123456'
            keyPassword '123456'
            keyAlias '扫码装箱'
        }
        release {
            storeFile file('/Users/abel.tang/workspace/app/wangxiaoyang.keystore')
            storePassword '123456'
            keyPassword '123456'
            keyAlias '扫码装箱'
        }
    }
    buildTypes {
        debug {
            signingConfig = signingConfigs.debug
            applicationIdSuffix '.test'
            manifestPlaceholders = [
               APP_NAME     : "扫码发货-测试版"
            ]
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.release
            manifestPlaceholders = [
               APP_NAME     : "扫码发货"
            ]
        }
    }
    flavorDimensions "channel"
    /**
     * 渠道打包
     */
    productFlavors{
        qita{
            dimension "channel"
        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            println(output.baseName)
            def fileName = "ship-v${defaultConfig.versionName}-${output.baseName}.apk"
            outputFileName = fileName
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation project(':refresh-footer')
    implementation project(':refresh-header')
    implementation project(':refresh-layout')
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'com.flyco.roundview:FlycoRoundView_Lib:1.1.4@aar'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'
    implementation 'com.github.czy1121:loadinglayout:1.0.1'
    implementation 'com.github.mmin18:realtimeblurview:1.0.6'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.youth.banner:banner:1.4.9'
    //最新版本
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'jp.wasabeef:recyclerview-animators:2.2.6'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.3'
    //    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5-alpha-2'
    //    compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5-alpha-2'
    testImplementation 'junit:junit:4.13'
    implementation 'com.github.bumptech.glide:glide:4.0.0-RC1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0-RC1'
    // 开关插件
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation files('libs/platform_sdk_v2.4.0210.jar')
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    // compileOnly修饰的依赖会添加到编译路径中，但是不会打包到apk中，因此只能在编译时访问，且compileOnly修饰的依赖不会传递。
    compileOnly 'org.projectlombok:lombok:1.18.16'
    // 用于注解处理器的依赖配置，还没有使用过
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'

    implementation 'com.alibaba:fastjson:1.2.9'

    // @BindView
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}
